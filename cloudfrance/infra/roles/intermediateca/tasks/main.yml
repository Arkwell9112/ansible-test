---

- name: Check if intermediate-ca exists.
  community.hashi_vault.vault_read:
    path: "{{ engine_path }}/issuer/{{ intermediate_ca_ref }}"
  register: issuer_ref
  changed_when: false
  failed_when: false
- name: Check if intermediate-ca key exists.
  community.hashi_vault.vault_read:
    path: "{{ engine_path }}/key/key.{{ intermediate_ca_ref }}"
  register: key_ref
  changed_when: false
  failed_when: false
- name: Generate intermediate-ca csr if not exists.
  vars:
    key_value: "key.{{ intermediate_ca_ref }}"
  community.hashi_vault.vault_write:
    path: "{{ engine_path }}/intermediate/generate/{{ \"internal\" if key_ref.data is not defined else \"existing\" }}"
    data:
      key_name: "{{ key_value if key_ref.data is not defined else null }}"
      key_ref: "{{ key_value if key_ref.data is defined else null }}"
      common_name: "{{ intermediate_common }}"
      ttl: "{{ ttl }}"
      key_bits: "{{ key_bits }}"
      max_path_length: "{{ max_path_length }}"
      ou: "{{ ou }}"
      organization: "{{ organization }}"
      country: "{{ country }}"
      locality: "{{ locality }}"
      province: "{{ province }}"
      street_address: "{{ street_address }}"
      postal_code: "{{ postal_code }}"
    register: intermediate_csr
    when: issuer_ref.data is not defined
- name: Sign intermediate-ca.
  community.hashi_vault.vault_write:
    path: "{{ root_engine_path }}/issuer/{{ root_ca_ref }}/sign-intermediate"
    data:
      csr: "{{ intermediate_csr.data.data.csr }}"
  register: intermediate_cert
  when: issuer_ref.data is not defined
- name: Import intermediate-ca.
  community.hashi_vault.vault_write:
    path: "{{ engine_path }}/intermediate/set-signed"
    data:
      certificate: "{{ intermediate_cert.data.data.certificate }}"
  register: intermediate_import
  when: issuer_ref.data is not defined
- name: Set issuer data.
  community.hashi_vault.vault_write:
    path: "{{ engine_path }}/issuer/{{ intermediate_import.data.data.imported_issuers[0] | default(intermediate_ca_ref) }}"
    data:
      issuer_name: "{{ intermediate_ca_ref }}"
      leaf_not_after_behavior: "truncate"
      issuing_certificates:
        - "{{ vault_addr }}/v1{{ engine_path }}/ca"
      crl_distribution_points:
        - "{{ vault_addr }}/v1{{ engine_path }}/crl"
      ocsp_servers:
        - "{{ vault_addr }}/v1{{ engine_path }}/ocsp"
  when: (issuer_ref.data is not defined) or (issuer_ref.data.data.leaf_not_after_behavior != "truncate")